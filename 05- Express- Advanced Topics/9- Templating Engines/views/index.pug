// ===== PUG TEMPLATE SYNTAX =====
// Pug uses indentation (like Python) instead of HTML tags with angle brackets
// No closing tags needed - indentation defines structure

html
    head
        // title= means "set title content to the value of title variable"
        // Server will replace 'title' with data passed from res.render()
        title= title
    body
        // h1= means "set h1 content to the value of message variable"  
        // Server will replace 'message' with data passed from res.render()
        h1= message

// ===== HOW THIS TEMPLATE WORKS =====
// 1. Server receives: { title: "My Express App", message: "Hello" }
// 2. Pug processes template:
//    - title= title becomes <title>My Express App</title>
//    - h1= message becomes <h1>Hello</h1>
// 3. Server generates final HTML:
//    <html>
//      <head>
//        <title>My Express App</title>
//      </head>
//      <body>
//        <h1>Hello</h1>
//      </body>
//    </html>

// ===== PUG SYNTAX NOTES =====
// tag= variable    → Content comes from JavaScript variable
// tag content      → Static content (no variable)
// tag(attr="val")  → HTML attributes
// #id              → div with id
// .class           → div with class

// ===== EQUIVALENT HTML =====
// This Pug template generates the same HTML as:
// <html>
//   <head>
//     <title>My Express App</title>
//   </head>
//   <body>
//     <h1>Hello</h1>
//   </body>
// </html>

// ===== TEMPLATE + DATA = DYNAMIC HTML =====
// Template (this file): Structure with placeholders
// Data (from server): { title: "My Express App", message: "Hello" }
// Result: Complete HTML with data filled in